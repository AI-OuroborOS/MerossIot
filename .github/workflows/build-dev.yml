name: Build pre-release

on:
  push:
    paths-ignore: docs/**
    branches: [ development-0.4.X.X ]

jobs:
  build:
    name: Build on node ${{matrix.python_version}}
    outputs: 
      tag: ${{steps.tag.outputs.tag}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ['3.6', '3.7', '3.8']
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup Python ${{matrix.python_version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python_version}}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build artifact
      run: python setup.py sdist bdist_wheel
    - name: Calculate Version
      id: tag
      run: |
        TAG=$(cat $GITHUB_WORKSPACE/.version)$GITHUB_RUN_NUMBER
        echo "Tag: $TAG"
        echo "::set-output name=tag::$TAG"
    
  pre-release:
    name: Pre-Release on GitHub
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Create a Release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{needs.build.outputs.tag}}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Development release ${{github.RUN_NUMBER}}
        # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
        prerelease: true
